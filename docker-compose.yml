services:
  web:
    build: .
    env_file:
      - .env
    volumes:
      - ./poms:/var/app/poms
    depends_on:
      - db
      - rabbitmq
      - redis
    restart: always
    ports:
      - "8000:8080"

  worker:
    build: .
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=poms_app.settings # remove after change manage.py location
    depends_on:
      - db
      - rabbitmq
      - redis
    command: ["celery", "--app", "poms_app", "worker", "--concurrency=1",
     "--loglevel=INFO", "-n", "worker01",
     "-Q", "backend-general-queue,backend-background-queue",
     "--max-tasks-per-child=1"]

  migration:
    build: .
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=poms_app.settings # remove after change manage.py location
    depends_on:
      - db
      - redis
    command: ["python", "manage.py", "migrate_all_schemes"]
    
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: finmars_dev
      POSTGRESQL_MAX_OPEN_CONNS: 500
    stdin_open: true
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4.1-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"  # HTTP management port
    stdin_open: true
    tty: true

  redis:
    image: redis
    ports:
      - "6379:6379"
    stdin_open: true
    tty: true

volumes:
  postgres_data:
